=========================================================================================================
                           MAC (Media Access Control)
=========================================================================================================
MAC address is a unique 48 bit hardware number of a computor that is embded into network card during
manufacturing.

https://www.iana.org/assignments/ethernet-numbers/ethernet-numbers.xhtml
https://www.geeksforgeeks.org/introduction-of-mac-address-in-computer-network/
=========================================================================================================
                                    Ethernet
=========================================================================================================
Max frame size => 1518 bytes (including 4byte CRC and 14byte header)
Inter Frame Gap => 12 bytes send between frames to avoid collisions
---------------------------------------------------------------------------------------------------------
                      Ethernet Technology Characteristics
---------------------------------------------------------------------------------------------------------
The major reason for the success of Ethernet in industry was the adoption of the Ethernet standard
(IEEE 802.3), allowing for interoperability between different vendor’s products (Carrier Sense Multiple
Access with Collision Detection CSMA/CD, Access Method and Physical Layer Specifications). This
specification allowed many different vendors to produce network interfaces and media that supported
Ethernet.

Ethernet is a very flexible system because interfaces operating at different transmission rates can be
connected to the same LAN.

There are three elements in Ethernet:
1. Physical media segments, which are used to interconnect systems
2. The Media Access Control (MAC) rules that implement access to Ethernet channels
3. A frame that organizes data to be transmitted in a standard way

When transmitting data, a station must wait for the channel to be free of data before sending a packet
formatted as a frame. The mechanism for preventing packet collision is the Carrier Sense Multiple Access
with Collision Detection (CSMA/CD) method specified by the IEEE standard. Prior to data being transmitted,
a station must enter Carrier Sense (CS) mode. If no data is detected on the channel, all stations have an
equal opportunity to transmit a frame, a condition known as Multiple Access (MA). If two or more stations
begin transmitting frames and detect that they are transmitting at the same time, a state known as Collision
Detection (CD), then the stations halt transmission, enter the CS mode and wait for the next MA. When a
collision occurs, the frames must be re-sent by their respective parties, delay between retransmission
is randomized for each network interface.

? How does station know that some one else starte sending data at the same moment?

Ethernet has a logical topology, or tree-like structure, that is distinct from the set of physical interfaces
that are interconnected using networking cable. One of the implications of this tree-like structure is that
individual branches can be segmented in order to logically isolate structural groups. This structure also
allows a large number of unrelated networks to be connected to each other 
Individual network branches can be linked together by using a repeater of some kind, such as a hub or a switch.
http://etutorials.org/Misc/solaris+exam+guide/Part+III+Solaris+9+Operating+Environment+Objectives/Chapter+33+Ethernet/Ethernet+Characteristics/
---------------------------------------------------------------------------------------------------------
                             Ethernet frame format
---------------------------------------------------------------------------------------------------------
Through ethernet development there was many additions to ethernet frame structure
The first type of ethernet frame was ethernet II
Preamble - 8bytes, identifies start of ethernet frame
DA       - 6bytes, destination mac address, can unicast,multicast or brodcast
SA       - 6bytes, source mac address, unicast only
E-Type   - 2bytes, l3 protocol identifier IP4,IP6
PAYLOAD  - 46 through 1500 bytes
FCS      - 4bytes, CRC frame check sequence

Ethernet 802.3/802.2 (802.3 with LLC header)
E-Type was replaced with Length wich identified count of bytes after this field
SSAP(Source service access point) and DSAP (Destination service access point) byte fields were added
to identify l3 protocol used.
Control byte field was added

Next evoultion will be 802.3 with SNAP header

https://habr.com/ru/post/227729/
---------------------------------------------------------------------------------------------------------
                               10Base-T Standart
---------------------------------------------------------------------------------------------------------
10Base-T is the Ethernet wiring standard for 10 Mbps (megabits per second) for a maximum distance of
approximately 100 meters per segment over unshielded twisted pair cables terminated with RJ-45 connectors.
The name 10Base-T is derived from several aspects of the physical medium. The 10 refers to the transmission
speed of 10 Mbps. The base is short for baseband, which means that only one Ethernet signal is present on the
send and/or receive pair (i.e., there is no multiplexing as with broadband transmissions). The T comes
from twisted pair.  10Base-T does not specify the exact type of wiring to be used. 
10Base-T was the first vendor-independent standard implementation of Ethernet on twisted pair wiring
http://www.linfo.org/10baset.html
---------------------------------------------------------------------------------------------------------
                               10Base F standart
---------------------------------------------------------------------------------------------------------
10BASE-F is a generic term for the family of 10 Mbit/s Ethernet standards using fiber optic cable. In
10BASE-F, the 10 represents a maximum throughput of 10 Mbit/s, BASE indicates its use of baseband
transmission, and F indicates that it relies on medium of fiber-optic cable. One strand is used for data
transmission while the other is used for reception, making 10BASE-F a full-duplex technology. There a three
different variants of 10BASE-F: 10BASE-FL, 10BASE-FB and 10BASE-FP. Of these only 10BASE-FL experienced
widespread use.
---------------------------------------------------------------------------------------------------------
                                 Fast Ethernet
---------------------------------------------------------------------------------------------------------
Fast Ethernet is an extension of the 10 megabit Ethernet standard. It runs on twisted pair or optical
fiber cable in a star wired bus topology.Of the Fast Ethernet physical layers, 100BASE-TX is by far the
most common. The "100" in the media type designation refers to the transmission speed of 100 Mbit/s, while
the "BASE" refers to baseband signalling. The letter following the dash ("T" or "F") refers to the physical
medium that carries the signal (twisted pair or fiber, respectively), while the last character
("X", "4", etc.) refers to the line code method used.

---------------------------------------------------------------------------------------------------------
                                  Ports + leds
---------------------------------------------------------------------------------------------------------
Switch ports are layer 2 interfaces which are used to carry layer 2 traffic. A single switch port can
carry single VLAN traffic whether it is an access port or trunk port.

Ports can be classified by its usage :
1. Access port. 

Ethernet ports usually have 2 leds, one represents the connection state (fixed light) and the other
represents activity. Usually the connection state is green or yellow/orange where green means higher
speed and yellow/orange means lower speed. (Available speeds are 10/100/1000 megabits/sec). Speed is
negotiated at connection, then is fixed. The activity led is usually green and blinks when data is sensed
thru the port 

On cheap switches there is usually a single green led per port indicating connection, which blinks when
data is seen passing. Advanced switches can have different meanings for lights depending on user action
or configuration.

https://www.quora.com/What-do-the-different-colors-of-lights-in-an-Ethernet-port-mean
---------------------------------------------------------------------------------------------------------
Troubleshooting slow ethernet connection
---------------------------------------------------------------------------------------------------------
ifconfig                                    # card state, rx/tx stats
ping 127.0.0.1                              # device networking state
ping 192.168.0.1                            # connectiong to network
ping 8.8.8.8                                # internet connection
ping google.com                             # dns resolving
dig youtube.com                             # double check the dns
cat /etc/resolv.conf                        # in case something is wrong with dns
journalctl -u NetworkManager.service        # check logs
systemctl status NetworkManager.service     # check logs
free                                        # check memory usage issues
iptables -L                                 # check firewalling
check other devices connected to the network

Most of the previous tests are applicable to the wifi, however you may want to
perform some additional ones
iwconfig
Check if conncetiong between route and ISP is slow
Try to come closer to the router and retest the wifi speed
Check channel congestion

=========================================================================================================
            Token Ring and FDDI (Fiber Distributed Datra Intreface)
=========================================================================================================
Token Ring => L1 protocol created before ethernet and used in ring topology. Token was going through
circle and device having it could send message to another.

FDDI => a set of standars for transmitting data over fiber-optic cable over a span of up to 124 miles
It is usually used as backbone in WAN

TODO
=========================================================================================================
                                  Broadcasting
=========================================================================================================
Broadcast frames are forwarded out all switch ports except the original ingress port. This ensures that
all devices in a broadcast domain are able to receive the frame. If there is more than one path through
which the frame can be forwarded, an endless loop can result. When a loop occurs, it is possible for the
MAC address table on a switch to constantly change with the updates from the broadcast frames, which
results in MAC database instability.

---------------------------------------------------------------------------------------------------------
                                Broadcast storm
---------------------------------------------------------------------------------------------------------
Broadcast storm is the result of sending broadcast messaged to network with L2 loop.
Some switches/gateways have an option to ignore broadcast messages after reaching defined treashold
therefore device won`t die from received traffic. For instance, interface can be configured to drop
received broadcast when the level of broadcast received on the interface reaches 10% of the operational
link speed.
storm-control broadcast level 10.00
storm-control action trap

https://www.cisco.com/c/en/us/td/docs/switches/lan/catalyst6500/ios/12-2SX/configuration/guide/book/storm.html
https://community.cisco.com/t5/switching/storm-control-broadcast-level-what-does-this-command-do-exactly/td-p/2759888
---------------------------------------------------------------------------------------------------------
                                WOL. Wake On Lan
---------------------------------------------------------------------------------------------------------
WOL is a special feature used for managment purpose. Common purpose is turning devices on in some network
to perform backup or other support procedures. This is done by sending  a `magic` packet to the target.
Target should support WOL on hardware level and have this feature enable in BIOS. When packet arives to
network adapter, e.g. ethernet port, it trigers entire system bootup if one is disabled. Quite often
you want to perform this action for entire, possible remote, network which is possible using local/directed
broadcast.

sudo ethtool eth0 | grep -i wol     # find if wol is supported
sudo ethtool -s eth0 wol g          # enable wol
Note: the previous configure is temporary and will be discarded after reboot.

https://hackernoon.com/wake-on-lan-through-the-internet-491817e2dd41
---------------------------------------------------------------------------------------------------------
                                Broadcast types
---------------------------------------------------------------------------------------------------------
Limited/Local Brodcast. 255.255.255.255
This type broadcast is drop by your router and is received only by hosts on the same L3 segment.

Targeted Broadcast. 192.168.1.255
Targeted Broadcast is used for remote administration tasks such as backups and WOL.
Targeted Broadcast is a process of flooding a target subnet with L3 broadcast IP packets originating from
a different subnet. Note, it requires special configuration on route/switch side and packets are only
forwarded to LAN interfaces and not WAN.

switch# configure terminal
switch(config)# interface ethernet 2/1
switch(config-if)# no switchport
switch(config-if)# ip directed-broadcast

https://www.ionos.com/digitalguide/server/know-how/broadcast-address/
https://www.cisco.com/c/m/en_us/techdoc/dc/reference/cli/nxos/commands/l3/ip-directed-broadcast.html
https://www.juniper.net/documentation/en_US/junos/topics/topic-map/switches-interface-targeted.html
---------------------------------------------------------------------------------------------------------

Ethernet Multicast address => 01:00:00:00:00:00
Ethernet Broadcast address => ff:ff:ff:ff:ff:ff

http://www.ciscopress.com/articles/article.asp?p=2832407&seqNum=4
=========================================================================================================
                                      ARP
=========================================================================================================
Address Resolution Protocol => protocol used by IPv4 to map IP addresses to hardware MAC address.
Ethernet network uses two hardware addresses which identify source and destination of each frame.
Each computer NIC (network interface card) is allocated a globally unique 6 byte link address when the
factory manufactures the card. This address is called MAC on Ethernet layer and is used as source address
for localy generated frame and as destination for received frame.
The destination address all 1`s is refred as broadcast packet.

ARP message types
1. Request. Requst send over ethernet to every host on the shraed link-layer segment,
   This is called link-layer broadcast
   User respones to requester only (unicast mode)
2. Probe. Arp asks whether ip is used
3. Reply. Owner of ip replying
4. Announcment. You assign ip to urself

To send packet to some host by its IP we need to fill L2 frame as well, therefore we need to
know mac address of the device. This is doen with arp request which is sent over broadcast
and looks like `who is X.X.X.X tell Y.Y.Y.Y`. It is required that only owner of this IP responds
and all other sillently drop the frame. The target forms arp reply of form `X.X.X.X is hh:hh:hh:hh:hh:hh`
and send it as unicast response. 

Before sending a request we need to know which interface should be used and if the host is in local subnet.
This is done by interating through interfaces and checking if both interface and host are within one
subnet. If the endhost is from another subnet, we send requst to default gateway with DST-mac assigned
to gateway mac.

ARP probe and announcment are part of DAD (Duplicate Address Detection)
https://networkengineering.stackexchange.com/questions/52504/how-does-the-arp-table-work-in-case-of-the-gateway-router
---------------------------------------------------------------------------------------------------------
                                     Tables
---------------------------------------------------------------------------------------------------------
FDB (Forwarding Data Base). The correspondence between Mac+vlan and port. FDB is used on Layer 2
(switching/bridging) to associate MAC addresses that have been learned and which ports that MAC address
was learned on. When a Ethernet frame arrives at a Layer 2 device, the Layer 2 device will inspect the
destination MAC address of the frame and look to its FDB table for information on where to send that
specific Ethernet frame.
If the FDB table doesn’t have any information on that specific MAC address it will flood the Ethernet
frame out to all ports in the broadcast domain. Host is then remebered, and it`s mac is associated with
an interface where packet was received. Next time, if some one tries to commonicate to that host, message
won`t be broadcasted, instead it will be sent to wanted host only.

ARP table is used to associate IP with it`s mac address in case host is within the same network segment.
Otherwise, it is responsibilty of gateway to resolve destination host, therefore, client will skip ARP
process and use gateway`s mac as a destination (and it`s own mac as source). Gateway, on it`s behalve,
replace destination mac with resolved one.

If switch receives a message from already known mac but interface has changed, it will update it`s
mappings database.
It is implemented in terms of CAM (Content-addressable memory) which efficently associates packet 
(it`s mac?) with port.

RIB (Routing Table). RIB holds all routes known to gateway. It is usually big and takes long time to
lookup, therefore, the most common entries are cached into FIB.

FIB (Forwarding Information Base). FIB table appears as a streamlined form of the routing table,
usually only for commonly used table entries. When a route is required, the FIB table is retrieved first,
and the routing table is retrieved if it is not found.

https://topic.alibabacloud.com/a/rib-fib-arp-fdb_8_8_30052435.html
https://networkengineering.stackexchange.com/questions/34754/same-mac-on-different-interfaces
https://blog.michaelfmcnamara.com/2008/02/what-are-the-arp-and-fdb-tables/
---------------------------------------------------------------------------------------------------------
                                 Configuration
---------------------------------------------------------------------------------------------------------
arp -n                          # view cache
ip neigh show                   # to see reachable neigh
ip -s -s neigh flush all        # flush arp table
ip link set dev #dev arp off    # suppress arp

ip -s neigh shouw               # displays last time usage stats
192.168.0.1 dev wlp3s0 lladdr b0:4e:26:2f:ee:5a ref 1 used 3332/0/3327 probes 1 REACHABLE
where 3332/0/3327 means
X/./. : Number of seconds since the ARP entry was last used
./X/. : Number of seconds since the ARP entry was last confirmed
././X : Number of seconds since the ARP entry was last updated



brctl show
brctl showmacs <intf>
brctl stp <intf> on
brct showstp <intf>
---------------------------------------------------------------------------------------------------------
https://stackoverflow.com/questions/15372011/configuring-arp-age-timeout
https://unix.stackexchange.com/questions/473919/what-is-the-fifth-coloum-in-the-output-of-ip-stat-neighbour-show-stand-for
https://erg.abdn.ac.uk/users/gorry/course/inet-pages/arp.html
https://www.practicalnetworking.net/series/arp/arp-probe-arp-announcement/
=========================================================================================================
                                    Switches
=========================================================================================================
Network switch => comupter networking device that connects devices on a computer network by using packet
switching to receive, process, and forward data to the destination device. It is a multiport network
bridge that uses hardware addresess to process and forward data at L2. There are switches that knows how
to work with IP, such switches are named multilayer switches.

Switch stores in memory table with physical port and MAC address pairs. Switch then knows which port to
use to forward the frame. Table is filled during MAC learning process, when a frame first arrives at the
switchport, the switch checks the source MAC address within the frame and stores it next to the port number
on which it was received. If destination MAC is not known yet, then frame is duplicated on each port (except
one from which it was received). Devices not interested in frame will drop it. On response, destination
address is already known, therefore frame is sent over one interface only.

If destination MAC is "FF:FF:FF:FF:FF:FF", then frame is broadcasted for each port. It is used for ARP
https://www.grandmetric.com/2018/03/08/how-does-switch-work-2/

=========================================================================================================
                               Bridging (L2,mac)
=========================================================================================================
Ethernet bridging => way to connect network segments in a protocol independent way to from a larger network.
Packets are forwarded based on Ethernet address ranther than IP address, therefore all protocols can go
transparently through a bridge.

First think to keep in mind is that we are talking abothe the Ethernet layer here.  A packet destined for
the local computer according to the bridge (which works on the Ethernet layer) isn`t necessarily destined
for the local computer according to the IP layer. That`s how routing works (MAC destination is the router,
IP destination is the actual box you want to communicate with).

Note that bridge itself can gen an IP address and may work as a standart Ethernet device. The host can
communicate via this address with other guests to the bridge.

Bridge virtual file system can be found under
/sys/devices/virtual/net/<br_name>

https://en.wikibooks.org/wiki/Switches,_Routers,_Bridges_and_LANs/Bridges
https://linux-blog.anracom.com/tag/linux-bridge-linking/
---------------------------------------------------------------------------------------------------------
                         General frame traversal scheme
---------------------------------------------------------------------------------------------------------

                        Routing ============================\
                          ||                               ||
                          ||                               ||
Physical Interface ==> Processing ==> Bridging ==>  Physical Interface
       ||                                                  ||
       ||                                                  ||
 Ethernet Frame                                      Ethernet Frame

ebtables program is a filtering layer for a bridging firewall, it also allows iptables rules to function
in bridging mode, giving you both IP and MAC level filters for your firewall


                                                    /=====> Local Process ====> Routing Decision
                                                    ||                                ||
                                              ================                 ================
                                              |   Firewall   |                 |   Firewall   |
                                              |    INPUT     |                 |    OUTPUT    |
                                              ================                 ================
                                                    ||                                ||
                                                    ||                                ||
  ================                            /=============\                  ================
  |   Routing    |                            |    FILTER   |                  |   Firewall   |
  ================                            |    INPUT    |                  |  POSTROUTING |
        ||                                    \=============/                  ================
        ||                                           ||                               ||
  /=============\       /=============\              ||                               ||
  |    BROUTE   | ====\ |     NAT     |  ===\     Bridging                     ================
  |   BROUTING  | ====/ |  PREROUTING |  ===/     decision                     |   Bridge     |
  \=============/       |   Firewall  |              ||                        |   OUTPUT     |
        ||              |  PREROUTING |              ||                        |  POSTROUTING |
        ||              \=============/       /=============\                  ================
      INPUT                                   |   FILTER    |                         ||
                                              |   FORWARD   |                         ||
                                              |   Firewall  |                         ||
                                              |   FORWARD   |                         ||
                                              \=============/                         ||
                                                     ||                               ||
                                                     ||                               ||
                                              /=============\                         ||
                                              |     NAT     |                         ||
                                              | POSTROUTING |                         ||
                                              |   Firewall  |                         ||
                                              | POSTROUTING |                         ||
                                              \=============/                         ||
                                                    ||                                ||
                                                    \============ OUTPUT===============/

=========================================================================================================
                            Ebtables rules && tables
=========================================================================================================
The firewall component of the bridging firewall is achieved using ebtables.

---------------------------------------------------------------------------------------------------------
                                 Brotute table
---------------------------------------------------------------------------------------------------------
When NIC receives a frame, it will go through BROUTING chain where you can choose whether to route
or bridge frames, enabling you to make brouter.
A brouter is a device that bridges some frames/packets and routes other frames/packets based on
configuration infomation.
The default decision for BROUTING chain is bridging
---------------------------------------------------------------------------------------------------------
                                   NAT table
---------------------------------------------------------------------------------------------------------
PREROUTING - will be passed after BROUTING, decides whether it is for local process or should
we forward the frame
OUTPUT -
POSTROUTING -
---------------------------------------------------------------------------------------------------------
                                     FILTER
---------------------------------------------------------------------------------------------------------
INPUT -  traversed before passing frame to the upper layers
OUTPUT -  traversed after upper layer OUTPUT chain
FORWARD 
---------------------------------------------------------------------------------------------------------

Note that the ebtables BROUTING and PREROUTING chains are traversed before the bridging decision, therefore
these chains will even see frames that will be ignored by the bridge. 

Note, to enable iptable filtering when ebtables are present, you need to enable
net.bridge.bridge-nf-call-iptables = 1

Can be used with Virtualization therefore you can exposure VM to external world. It can be used to forward
packets between hosts/interfaces , for instance in router there is interface connected to host and to WAN,
to access internet we need to forward packets from host to WAN and vise versa.

Basically, bridging is pugging one computer into another that already has a connection to a large network
(like the internet) and letting the bridged computer use the networked computer`s connection
Setting up bridge =>
brctl add <bridge_name>                     # create bridge
brctl addif <bridge_name> <interfaces ...>  # add interfaces to the bridge

Adding interface to a bridge will cause the interface to lose its existing IP address.

https://upload.wikimedia.org/wikipedia/commons/3/37/Netfilter-packet-flow.svg
https://wiki.debian.org/BridgeNetworkConnections
http://ebtables.netfilter.org/documentation/docs.html
http://ebtables.netfilter.org/br_fw_ia/br_fw_ia.html
=========================================================================================================
                                      STP
=========================================================================================================
Often for network stability concerns we use redundant links. Idea is next, if one link goes down, we can
use another, maybe it goes up atimatically. However now we face problem of loops in network. For instance,
a switch broadcasts ARP for PC2 on its interface, which will be received by switch2 and if it doesn`t know
about a PC2 (maybe it doesn`t respond at the moment) will resend it to switch1 again. This is called a
broadcast storm.
                 //==========> PC1
Router ======> Switch1
               ||   ||
               ||   ||
               ||   ||
               ||   ||
               Switch2 <======== Router
PC2 =============//

Logical Layer 2 loops may occur due to the natural operation of switches—specifically the learning and
forwarding process. When multiple paths exist between two devices on a network, and there is no spanning
tree implementation on the switches, a Layer 2 loop occurs. A Layer 2 loop can result in three primary issues:
1. MAC database instability. Instability in the content of the MAC address table results from copies of
   the same frame being received on different ports of the switch. Data forwarding can be impaired when
   the switch consumes the resources that are coping with instability in the MAC address table.
2. Broadcast storm. Without some loop-avoidance process, each switch may flood broadcasts endlessly. This
   situation is commonly called a broadcast storm.
3. Multiple-frame transmission. Multiple copies of unicast frames may be delivered to destination stations.
   Many protocols expect to receive only a single copy of each transmission. Multiple copies of the same
   frame can cause unrecoverable errors.

Ethernet frames do not have a time to live (TTL) attribute. As a result, if there is no mechanism enabled
to block continued propagation of these frames on a switched network, they continue to propagate between
switches endlessly, or until a link is disrupted and breaks the loop.

Main aim of STP is to avoid L2 loops in network, it`s done with STA (Spanning Tree Algorithm) which
result in connected graph with no loops.

Note, that 802.1D is quite old/slow and now is commonly replaced with RSTP. For instance, most modern Cisco
switches default to a protocol called Per-VLAN RSTP. It automatically operates a separate spanning tree
domain with a separate root bridge on every VLAN. In practice, it’s common to make the same switch the root
bridge on all or most of the VLANs, though.

https://computer.howstuffworks.com/lan-switch13.htm
---------------------------------------------------------------------------------------------------------
                      How to create topology without loop
---------------------------------------------------------------------------------------------------------
Firstly, we need to root bridge/switch, device that is considered to be center or root node of STP and
a reference point for all path calculations. It is choosen by Bridge ID, 8bytes identifier which consists
of 2byte Bridge Priority (0-65535, by default 32768 + vlan id) and 6 byte MAC address of device.
Bridge Priority is probably vendor specific, it is one value that will be used by default of all vendor
devices, like 32768. Each sent BPDU will contain 2 bridge ids, the first one is sender bridge id and the
second it the bridge id that senders consider to be root. Initially each switch consideres itself to be
root until it receives BPDU with smaller Bridge ID. Therefore, if switch hasn`t received any BPDUs yet,
it consideres itself to be root, and use its id both for sender and root id. When switch receives
such BPDU, if receiver`s id is lower, it continues to consider itself as root, and will overwrite this
value within packet, before forwarding further.

          Bridge ID
    2bytes         6bytes
Bridge Priority |   Mac
Priority can be configured with `brctl setbridgeprio <bridge> <prio>`
If you don`t want some old switch to be root of your network, configure prefered switch to have maximal
priotrity and backup one to be a bit smaller.

When root bridge is choosen, each non-root switch is supposed to choose one port which will point to the
root switch (Root port). Root port is choosen by root path price. It is callculated from count of links
and its bandwidth.  There can be only one root port per non-root switch, otherwise there is loop.
1. Root port sends BPDU with Root Path Cost = 0
2. Receiving switch looks at speed of link and add cost according to table (802.1d)
   10 Mbps  => 100
   100 Mbps => 19
   1 Gbps   => 4
   10 Gbps  => 2
   Note, path cost is increased on a receiver side by inspecting characteristics of the link.
3. Device selects the port connected to the path with the lowest accumulated STP cost to the root which
   will be a root port. If there are multiple ports with equal path price, then port pointing to
   bridge/switch with the smalest(after root bridge) bridge priority is choosen.
4. If all ports are pointing to the same bridge/switch, then port which receives with the lowest STP Port
   Priority from neighbor switch is choosen as root port.
5. If STP Port Priority values are the same between connected ports, then port which receives the lowest
   physical port number from neighbor switch becomes the root port. This is the last tie breaker.
6. Received switch resends it to next one and so on

Now we need to choose Designated ports which are allowed to forward traffic. Designated ports are selected
on a per-segment basis, based on the cost of each port on either side of the segment and the total cost
calculated by STP for that port to get back to the root bridge. In case the two or more ports have the
same Root Path Cost, the switch with the lower Sender Bridge ID wins and its corresponding port is selected
as the segment's Designated Port.
If one end of a segment is a root port, then the other end is a designated port.
All ports on the root bridge are designated ports. It is usually not expected that designated ports are
blocked, except when you connect two ports of the same root switch. In such case, they will use default
STP mechanism to determine who get`s designated status and who gets blocked, resulting into
-> Lowest Root Bridge ID = tied
-> Lowest Root path cost = tied
-> BPDU that was sent from the switch with the Lowest Bridge ID = tied
-> Lowest Port number = which cannot be a tie.
Therefore, port with lower id stays alive and another gets blocked. 
(https://www.experts-exchange.com/questions/27490140/Do-BPDUs-return-to-the-switch-to-indicate-a-loop.html?redirect=/questions/27490140/Do-BPDUs-return-to-the-switch-to-indicate-a-loop.html&offering=3035)

Now we want to remove reduntant links to prevent loop. Any port that is not root nor designated gets
blocked.

Alternate port and backup port. An alternate port and a backup port are in a blocking state (or discarding
state) to prevent loops. Alternate ports are selected only on links where neither end is a root port.
Only one end of the segment is blocked, while the other end remains in forwarding state, allowing for a
faster transition to the forwarding state when necessary.

Disabled ports—A disabled port is a switch port that is shut down.

Root Port                    Designed Port
    Router   ==============================   Root Switch
    Designed Port                        Designed Port
      ||                                        ||
      ||                                        ||
      ||                                        ||
     Root Port                              Root port
     Switch   Blocked Port === Designated Port  Router
     Designated Port
      ||
      ||
      PC

https://www.experts-exchange.com/questions/27490140/Do-BPDUs-return-to-the-switch-to-indicate-a-loop.html?redirect=/questions/27490140/Do-BPDUs-return-to-the-switch-to-indicate-a-loop.html&offering=3035
---------------------------------------------------------------------------------------------------------
                                   Messaging
---------------------------------------------------------------------------------------------------------
Switches communicate with special packets called BPDU (Bridge Protocol Data Units). This message is sent
from each port for multicast mac address 01:80:C2:00:00:00. They are used to keep devices with updated
information about network and to prevent loop occurance. It is done, by default every 2 seconds or when
something has changed to speed up convergence (amount of time it takes to deal with algorithm to be
re-executed and create a new topology). 

There are two types of BPDU. Configuration BPDU, toplogy change notification BPDU (TCN) and Topology
Change Acknowledgment (TCA) confirming the reception of the TCN. Configuration BPDUs are originated only
by the root bridge (not a case for RSTP?). Non-Root Switch only propagates the BPDUs generated by the Root
Bridge (Root Switch). The Non-Root Switch also updates certain fields in the Configuration BPDUs, such
as Message Age, Root Path Cost, Sender Bridge ID etc.

Before sending forward the BPDU, switch replaces Sender Bridge ID with it`s own. Root Bridge ID will be
replaced as well, if received switch has higher priority.

The Configuration BPDU with the Type = 0x00, and the TCN BPDU with the Type = 0x80. What is called TCA is
simply a regular Configuration BPDU, Type = 0x00, with the TCA flag set.

When a port receives a BPDU, it has a path to the Root Bridge (Root Switch), because BPDUs are originated
from the Root Bridge (Root Switch). The port which receives a BPDU is normally a Root Port. For a Non-Root
Bridge a port that receives a BPDU, that port leads to the Root Bridge (Root Switch).
If a Non-Root Bridge receives BPDUs in two ports, probably the network is in a Layer 2 loop.


Couple important fields of Configuration BPDU =>
1. Sender identifier (Bridge ID)
2. Root switch identifier (Root Bridge ID)
3. Sending port identifier (Port ID)
4. Path to root switch cost (Root Path Cost) 

---------------------------------------------------------------------------------------------------------
                                      TCN
---------------------------------------------------------------------------------------------------------
A TCN BPDU will be generated by any switch in the network and flow upstream towards the Root Bridge, when
one of two things happen:
A port has gone into Forwarding mode
A port has gone from Forwarding or Learning mode into Blocking mode
It is sent over root port and contains no data. Notice, TCN will not be sent of PortFast is enabled.

The switch continues sending TCN BPDUs every Hello Time interval until it gets ack from its upstream
neighbor. Upstream neighbors propage TCP upto root, which on receive will send an ack. It is done with
simple BPDU but with Topology Change flag enabled. This is done to signal topology change and make
non-root switches to change bridge table aging time from 300 default seconds to the Forward Delay.

---------------------------------------------------------------------------------------------------------
                            States of port on bridge 
---------------------------------------------------------------------------------------------------------
1. Blocking. Initial state of port after initialization.
   Cannot receive/transmit data and cannot add MAC addresses to its address table.
   Listens for BPDU to know when it needs to ublock.
   If port is moved from Forwarding to blocking, TCN is send.
2. Listening. Moved to Listening if the switch thinks that the port can be selected as a Root/Designated.
   Cannot receive/transmit data and cannot add MAC addresses to its address table.
   Listens as well as sends BPDUs therefore it can be choose to be Root/Designated.
   If it looses Root/Designated status, it gets blocked.
   Waits for forwarding delay before starting to learn.
3. Learninig. Same as listening but now can remember MAC to its address table but can`t send data.
4. Forwarding. After another Forward Delay period in the Learninig state port is moved to Forwarding state.
   Normal working state of port when it can forward data. This port is expected to be Root/Designated.
   TCN is sent.
5. Disabled, Dissabled with shutdown command.

State of port is changes 1-4 after initialization, which makes some delay but then device can be sure that
nothing will be broken. Client may think that there is no DHCP in network and self configure during this
timeout. There is option `portfast` which makes prot start in state forwarding for end nodes to avoid such
problems

---------------------------------------------------------------------------------------------------------
                                     Timers
---------------------------------------------------------------------------------------------------------
It takes time to pass BPDUs between switches and create loop free topology. In addtition, news of a topology
change (such as a link or Root Bridge failure) can suffer from propagation delays as the announcement
travels from one side of a network to the other.
STP uses three times to make sure there is enough time for switches to receive accurate information and
avoid bridging loop formation.

Hello Time. Time interval at which Root sends BPDU, by default 2 seconds. It is configured on root and
can`t be change on non-root since they are just forwarding root BPDU. However, it can be configured for
TCN messages generated by non-root switches.

Forward Delay. The time interval that a switch port spends in both the Listening and Learning state.
The default value is 15 seconds.

Max Age. Switch holds copy of the best received BPDU. If it was not updated (better one was received or
at least the same one) for Age time, switch considered the BPDU to be outdated and topology change was
perforemed. The default Max Age value is 20 seconds.

This value can be changed but with care. This should be done on root switch since it will propagete BPDU
with timer values to non root devices.

---------------------------------------------------------------------------------------------------------
                                    Timings
---------------------------------------------------------------------------------------------------------
For Layer 2 switches, convergence occurs once Spanning Tree Protocol (STP) process has completed: a Root
Switch is elected, Root Ports and Designated Ports have been chosen, the Root Ports and Designated Ports
have been placed in a forwarding state, and all other ports have been placed in a blocking state.

If a port has to go through all four states, convergence takes 50 seconds: 20 seconds in blocking, 15
seconds in listening, and 15 seconds in learning.

There are some common ways to decrease this time.
Access ports (e.g. ports to which clients are connected and not switches?) should have STP disabled. To
do this, you should set them as portfast (they skip blocking/learning state and are always forwarding) and
also enable bpdufilter on those ports, so they do not participate in STP.

The rapid feature or RSTP is what you’ll probably find most useful. This allows the network to recover
from most failures in times on the order of 1 to 2 seconds.
---------------------------------------------------------------------------------------------------------
                                 Protecting STP
---------------------------------------------------------------------------------------------------------


If switch receives its own BPDU, receiving port is getting blocked.

https://www.experts-exchange.com/questions/27490140/Do-BPDUs-return-to-the-switch-to-indicate-a-loop.html
---------------------------------------------------------------------------------------------------------
                                Port attributes
---------------------------------------------------------------------------------------------------------
Port Priority. Each port of a Switch has a Spanning Tree Port Priority value associated with it, which is
equal to 128 by default and can be changed with `brctl setportprio  <bridge> <port> <prio>`

Port ID. Spanning Tree Port ID is formed by adding the 4-bit port priority value (the default value of 128)
to 12-bit interface identifier (total 16 bits). Normally, a Port ID is denoted in Hexadecimals similar as
0x8015, which is equivalant to 128.21 in decimals, where the first part is the default Port Priority number
and second part is the switch interface identifier.

Forwarding delay. Forwarding delay time is the time spent in each of the Listening and Learning states
before the Forwarding state is entered. This delay is so that when a new bridge comes onto a busy network
it looks at some traffic before participating.
brctl setfd <bridge> <time>

Hello time. Periodically, a hello packet is sent out by the Root Bridge and the Designated Bridges. Hello
packets are used to communicate information about the topology throughout the entire Bridged Local Area Network.
brctl sethello <bridge> <time>

Max age. If a another bridge in the spanning tree does not send out a hello packet for a long period of
time, it is assumed to be dead. This timeout is set with:
brctl maxage  <bridge> <time>

Aging time. How long MAC is saved to FIB after receiving packet with such MAC.
brctl setageing <bridge> <time>

http://williamherry.blogspot.com/2012/05/bridge-by-linux-foundation.html
---------------------------------------------------------------------------------------------------------
                             Configuration example
---------------------------------------------------------------------------------------------------------
Usually you would do following to set up unmanaged bridge
ifconfig eth0 0.0.0.0
ifconfig eth1 0.0.0.0
brctl addbr mybridge
brctl addif mybridge eth0
brctl addif mybridge eth1 
ifconfig mybridge up

If you want to set up managed bridge (with IP), replace `ifconfig up` for dhclient, or
how do you obtain IP

---------------------------------------------------------------------------------------------------------
                          Connecting switch to it self
---------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------
                         Protecting STP
---------------------------------------------------------------------------------------------------------
Some devices and local stacks running on systems/workstations are capable of generating potential STP BPDUs
that cause Denial of Service (DOS) attacks. PortFast and BPDU Guard features provide stability and security
for network topologies to prevent such attacks.

PortFast. Enabling the PortFast feature causes a switch or a trunk port to enter the STP forwarding-state
immediately or upon a linkup event, thus bypassing the listening and learning states. Though PortFast is
enabled the port still participates in STP. If the port happens to be part of topology that could form a
loop, the port eventually transitions into STP blocking mode. PortFast is usually configured on an edge
port, which means the port should not receive any STP BPDUs. If the port receives any STP BPDU, it moves
back to normal/regular mode and will participate in the listening and learning states.

BPDU filter will prevent inbound and outbound BPDU but will remove portfast state on a port if a BPDU is
received. Enabling BPDU filtering on an interface is the same as disabling spanning tree on it and can
cause spanning-tree loops.

BPDU Guard. Imagine that you have enabled PortFast for endpoint client port and later, by mistake, this
port was used to connect to another switch. This creates a risk to make a loop. To prevent this, you need
to enable BPDU Guard on such port, therefore swith will looks for any BPDU’s entering the interfaces and
disable port as soon as the first BPDU is received, by shutting the port down.
By default it is disabled, but can be enabled, then it works for all PortFast ports. It should be used on
all switch ports where STP PortFast is enabled.

Root Guards. This is a feature created to protect a topology from a rogue switch. It introduces a new state
of port called Alternate port which should be configured mannualy on per port basis.
Alternate port. Ports that are candidate root ports (thet are also close to the Root Bridge) but are in
the Blocking state.
The root guard feature was developed as a means to control where candidate Root Bridges can be connected
and found on a network. When such port gets an BPDU with a superrior Bridge ID it gets into `root-inconsistent
STP state`, meaning, no data can be sent/received, but the switch can listen to BPDUs received on the
port to detect a new root advertising itself. Root guard prevents the port from becoming a root port.
When the superior BPDUs ano longer are received, the port is cycled through the normal STP states to
return to normal use.


https://medium.com/ken-m-lai/bpdu-filter-vs-bpdu-guard-a112f967798b
---------------------------------------------------------------------------------------------------------
To check that stp is working, issue `tcpdump -vvv -p -n -i <intf> stp`, it is expected that every n seconds
(2 by default), your device will send BPDUs to detect another that`s also transmitting BPDUs

=========================================================================================================
                               VLAN (Virtual LAN)
=========================================================================================================
A VLAN is a logical subnetwork that can group together a collection of devices from different physical
LANs if they were within the same one. It can be used to re-partition network, increase security, reduce
costs, improved traffic managment or performance improvments. VLAN can be managed by router or smart switch.

A full L2 only switched network is referred to as a flat network topology. A flat network is a signle
broadcast domain, such that every connected device sees every broadcast packet that is transmitted.
There can be no paths for load balancing or fault tolerance, they are just blocked by STP. This limitation
can be overcomed by dividing flat network into VLANs. Each vlan creates a separate broadcast domain.

VLAN provides network performance by separating broadcast domain into smaller ones, therefore there is
less flood in the network, only devices that need/ are expected to receive broadcast are receiving it.

When a VLAN is provided at an access-layer switch, an end user must have some means of gaining membership
to it. Two membership methods exist:
1. Static requires an administrator to assign individual ports on the network switch to a virtual network.
   Switch ports are assigned to specific VLANS, each port receives a Port VLAN ID (PVID) that associates
   it with a VLAN number. The ports on a single switch can be assigned and grouped into many VLANs.
2. Dynamic VLAN configuration allows an administrator to define network membershop according to
   characteristics of the devices themselves rather than their switch port location.
---------------------------------------------------------------------------------------------------------
                                 Types of VLANs
---------------------------------------------------------------------------------------------------------
Default VLAN. All switch ports are a part of the default VLAN after the initial bootup of a switch and
loading the default configuration. This is usually VLAN 1. It has all the features of any VLAN, except
it cannot be renamed or deleted.

Native/Untagged VLAN. Is assigned to trunk port (one that supports traffic comming from many VLANs) and
used to forward untagged traffic. This traffic is usually used for carrying managment information, such
as VTP, STP, CDP, etc since they do not need VLANs for functioning and may be broken in case trunking is
badly configured or not working. By default it is VLAN 1 which collides with Default VLAN, therefore it
is recommended to configure it as an unused VLAN, distinct from VLAN 1 and other VLANs.
Note, any traffic forwarded out of a Trunk port that is associated with the Native VLAN is forwarded
without a VLAN Tag.
It is crucial to have both sides of a Trunk port configured with the same Native VLAN.

 | Switch1  | Native VLAN 22   ===========>  Native VLAN 33 | Switch2  | ====\
      |                                                          |           |
|Host Vlan 22|                                             |Host Vlan 33| |Host Vlan 22|
In the case described above, packet from host connected to VLAN 22 will overlap with default VLAN and
tag will be skiped. Switch2 will not know who should receive it and use it`s own native VLAN which is
not one expected. In such case some CISCO devices may display error log.

Data VLAN. VLAN configured to carry user-generated traffic. It is used to separate some generic traffic
from voice or managment traffic.

Managment VLAN. VLAN that is allowed to access the managment capabilities of a switch. VLAN 1 is the
managment VLAN by default. To manage switch, you need to assign an IP and subnet to one (virtual?)
interface of the switch, allowing the switch to be manage via HTTP/Telnet/SSH/SNMP. 
It is possible to have more than one management VLAN but it increases exposure to network attacks

Voice VLAN. Separate high priority VLAN provided for VoIP usage. It is required since VoIP has some rough
requirements on delay, which should be less than 150ms to provide constant sound stream. Without creating
separate VLAN, voice packets would be left somewhere in packet queue for a while.

---------------------------------------------------------------------------------------------------------
VLAN adds 4byte 802.1Q tag to ethernet frames, it is refered as tagged traffic. The first 16bits of this
field contain the hardcoded number 0x8100 that identifies that frame is part of VLAN. The last 12bits
contain the VLAN number between 1 and 4096. Three bits between them are used to define user priority and
the last bit says whether token ring frames should be carried over Ethernet
| Type (0x8100) | Pri | CFI | VID |
      16           3     1     12   bits

Your network may have devices not aware of VLANs (maybe you haven`t configured it for them yet), traffic
generated by them is not tagged. Untagged traffic is placed on Native VLAN, which by default is VLAN 1.

There are 2 types of ports used for VLAN:
NOTE: Different vendors have different names for ports. Cisco referes to port like Access an Trunk while
other vendors prefer Untagged and Tagged ports.
1. Access/Untagged port. End nodes connects to it. Trafic between port and end node is not tagged. This
   port is attached to some VLAN called PVID (Port Vlan ID). Enduser doesn`t know about belonging to a
   VLAN and the purpose of access port is to tag packets comming from client and untag packets going to
   client. You can extend a VLAN to another switch by configuring a separate port on both switches for
   proper VLAN and connectiong them. This needs to be done for each VLAN therefore is not scalable, for
   instance: if a topology is using 12 VLANs and 24 port switches, then half of the ports would be
   taken up by the inter-switch links. Instead, there is a mechanism which allows a single switch port
   to carry traffic from multiple VLANs called Trunk port.
2. Trunk/Tagged port. Port/Interface that is allowed to receive and send packet frames for multiple VLANs
   (tagged traffic), as well as traffic that does not come from a VLAN(untagged traffic).
   User should configure wich PVIDs should be accepted and forwarded over such port.
   VLAN trunks allow all VLAN traffic to propagate between switches so that devices that are in the same
   VLAN, but connected to different switches, can communicate without the intervention of a router.
   |Host|  ==> Port 1 | Switch1 | Port 2 ==>  Port 3 | Switch 2 | Port 4 ==> | Host|
   Ports 2 and 3 are trunk ports, they won`t remove tag.
   Trunk ports tag traffic depending on it`s source port.

General flow:
- Packets going from client though access port are tagged with PVID
  If the destination is available on another access port of the switch, tag get`s removed
  and packet is forwarded
NOTE: Tagged packets received on access port are droped
- If destination is not rechable from direclty accessed switch, PVID is saved and packet is sent
  over trunk.
- If trunk receives a packet with PVID matching it`s own Native PVID, packet get`s untagged and sent
- If trunk receives a untaged packet, it get`s tagged with a Native PVID

The only case when tagged frames (matching VLAN IDs) are accepted on access port is when it is a hybrid
link, which is a link that can receive both tagged and untagged traffic. An access port with voice vlan
configured is a hybrid link as it can receive both untagged traffic (from PC) and tagged from phones.

NOTE: it is not common but fine for end host to be connected to trunk port.
https://community.cisco.com/t5/switching/why-native-vlan-exists-on-a-trunk/td-p/1363872
- Endclient may want to prioritize some trafic by using VLANs CoS field, in such case connecting to
  access port is not applicable.
- Cases when computer itself is intentionally placed into multiple VLANs
- Virtualization, separating VMs by VLANs

By default, all switch ports are assigned to VLAN 1, are set to be a VLAN type of Ethernet, and have
MTU size of 1500 bytes.


First, the VLAN must be created on the switch and assigned to specific switch ports. VLANs are referenced
by a VLAN number in range 1 to 1005, where 1(default VLAN PVID) and 1002 through 1005 (legacy functions
related to Token Ring and FDDI) are automatically created and set aside.
for special uses.

VLANs can be scaled in the switch block by using two basic methods:
1. End-to-End VLANs. 
2. Local VLANs

As well there is native vlan which is never tagged? By default it is vlanid 1. It is used for devices
that don`t know about VLANs.

http://www.practicalnetworking.net/stand-alone/vlans/#tagged-untagged
https://networkdirection.net/articles/network-theory/taggeduntaggedandnativevlans/
https://serverfault.com/questions/432873/vlan-tagging-at-access-port-in-switch
https://community.cisco.com/t5/switching/802-1q-tag-on-access-switchport/td-p/1686159
---------------------------------------------------------------------------------------------------------
                                    Routing
---------------------------------------------------------------------------------------------------------
Usually each VLAN has a separate subnet and if you want to have connection between them, you need a
router which will perform inter VLAN routing. As well, there is another reason when you need routing,
when packets destined for stations that do not belong to the present VLANs.
On a smart switch this can be performed by configuring L3 interface called SVI (Switch Virtual Interface)
When routing get`s enabled, MAC DA of the packet should be the MAC of the internal bridge-router
interface for the packet to be routed.

There are two ways to implement inter-VLAN routing:
- Traditional inter-VLAN routing
  A router is connected to the switch using multiple interfaces, one for each VLAN
  In this form of routing, the router has to have as many LAN interfaces as the number of VLANs configured
  on the switch.
- Router-on-a-stick
  Router is connected to the switch using a single physical interface that has a virtual subinterface for
  each VLAN, switch port is in trunk mode.

https://www.ccnablog.com/inter-vlan-routing/
---------------------------------------------------------------------------------------------------------
                                    Examples
---------------------------------------------------------------------------------------------------------
Enabling vlans at linux
---------------------------------------------------------------------------------------------------------
sudo modprobe 8021q                       # load kernel module
vconfig add eno1 10                       # add interface
vconfig rem eno1.10                       # rem interface
sudo su -c 'echo "8021q" >> /etc/modules' # add module initialization on boot

To make interface available on boot use /etc/network/interfaces
auto eno1.10
iface eno1.10 inet dhcp
    vlan-raw-device eno1
---------------------------------------------------------------------------------------------------------
www.picturesofeverydaylife.com/misc/20130502-Rep_Cap/
=========================================================================================================
